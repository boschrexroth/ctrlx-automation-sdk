# Getting started
# See https://snapcraft.io/docs/getting-started
# Snapcraft references
# See https://snapcraft.io/docs/snapcraft-yaml-reference

name: sdk-go-appdata
title: SDK Go App Data
version: 1.0.0
summary: Application data sample written in Go for ctrlX CORE.
description: This sample demonstrates how to persist your application data in ctrlX CORE
confinement: strict # use 'strict' once you have the right plugs and slot
grade: stable
base: core22
type: app

apps:
  app:
    command: ./bin/appdata
    plugs:
      - network
      - network-bind
      - network-status
      - active-solution
    daemon: simple
    restart-condition: always
    passthrough:
      restart-delay: 10s

parts:
  app:
    source: .
    plugin: go
    override-build: |
      case $SNAPCRAFT_ARCH_TRIPLET in
        aarch64-linux-gnu)
          export GOARCH=arm64
          export GOARM=7
          export CGO_ENABLED=0
          GO111MODULE=on
          ;;
        amd64)
          export GOARCH=amd64
          ;;
      esac
      go build -buildvcs=false -o ../install/bin/ ./...

  configs:
    source: ./configs
    plugin: dump
    organize:
      'package-assets/*': package-assets/${SNAPCRAFT_PROJECT_NAME}/

slots:
  package-assets:
    interface: content
    content: package-assets
    source:
      read:
        - $SNAP/package-assets/${SNAPCRAFT_PROJECT_NAME}

  package-run:
    interface: content
    content: package-run
    source:
      write:
        - $SNAP_DATA/package-run/${SNAPCRAFT_PROJECT_NAME}

plugs:
  active-solution:
    interface: content
    content: solutions
    target: $SNAP_COMMON/solutions
